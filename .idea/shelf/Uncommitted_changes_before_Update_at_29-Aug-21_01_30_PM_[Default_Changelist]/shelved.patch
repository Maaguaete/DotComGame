Index: dotcomgameHead1stJava/GameHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dotcomgameHead1stJava;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Random;\r\nimport java.util.Scanner;\r\n\r\npublic class GameHelper {\r\n\r\n    int startRow, startColumn;\r\n    String cell;\r\n    boolean vector;\r\n    ArrayList<String> Store = new ArrayList<>();\r\n\r\n    ArrayList<String> placeTerrorist() {\r\n\r\n        ArrayList<String> body = new ArrayList<>();\r\n        outer: while(body.size()<3) {\r\n            ranDOM();\r\n            for (int i = 0; i < 3; i++) {\r\n\r\n                if(vector) {  // true-> Make Vertical body, false-> Make Horizontal body.\r\n                    if (startRow > 69) { // Make sure DotCom in range (A,B,C,D,E,F,G) of 7x7 Grid.\r\n                        cell = String.format(\"%c%d\",startRow-i,startColumn);\r\n                     // cell = (char) (startRow - i) + Integer.toString(startColumn);\r\n                    } else\r\n                        cell = String.format(\"%c%d\",startRow+i,startColumn);\r\n                     // cell = (char) (startRow + i) + Integer.toString(startColumn);\r\n                }else {\r\n                    if (startColumn > 4) { // Make sure DotCom in range (1->7) of 7x7 Grid.\r\n                        cell = String.format(\"%c%d\",startRow,startColumn-i);\r\n                     // cell = ((char) startRow + Integer.toString(startColumn - i));\r\n                    } else\r\n                        cell = String.format(\"%c%d\",startRow,startColumn+i);\r\n                     // cell = ((char) startRow + Integer.toString(startColumn + i));\r\n                }\r\n\r\n                if (Store.contains(cell)) {\r\n                    body.clear();\r\n                    continue outer;\r\n                } else\r\n                    body.add(cell);\r\n            } // close for\r\n        }\r\n        Store.addAll(body);\r\n        return body;\r\n    }\r\n\r\n    void ranDOM() { // Tạo 1 ô ko trùng lặp các ô trước\r\n        do {\r\n            // Row A,B,C,D,E,F,G correspond to ASCII values bwt 65-71 range.\r\n            Random rd = new Random();\r\n            vector = rd.nextBoolean();\r\n            startRow = rd.nextInt(72-65)+65; // Max: 72 is Exclusive, Min: 65 is Inclusive.\r\n            startColumn = rd.nextInt(8-1)+1; // Max: 8 is Exclusive, Min: 1 is Inclusive.\r\n            cell = String.format(\"%c%d\",startRow,startColumn); // New option. The old option is below this line.\r\n//            cell = (char) startRow + Integer.toString(startColumn);\r\n        } while (Store.contains(cell));\r\n    }\r\n\r\n    public String getUserInput(){\r\n        Scanner sc = new Scanner(System.in);\r\n        System.out.print(\"Pull the trigger: \");\r\n        return sc.nextLine().toUpperCase();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/dotcomgameHead1stJava/GameHelper.java b/dotcomgameHead1stJava/GameHelper.java
--- a/dotcomgameHead1stJava/GameHelper.java	(revision 3140926d0469b80288cebf05944cd1709a9060d2)
+++ b/dotcomgameHead1stJava/GameHelper.java	(date 1630218601237)
@@ -52,6 +52,7 @@
             vector = rd.nextBoolean();
             startRow = rd.nextInt(72-65)+65; // Max: 72 is Exclusive, Min: 65 is Inclusive.
             startColumn = rd.nextInt(8-1)+1; // Max: 8 is Exclusive, Min: 1 is Inclusive.
+            // The CELL need to be formed here to cross-check with Store and beyond.
             cell = String.format("%c%d",startRow,startColumn); // New option. The old option is below this line.
 //            cell = (char) startRow + Integer.toString(startColumn);
         } while (Store.contains(cell));
